/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/constants.js":
/*!**************************!*\
  !*** ./src/constants.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "defaultSettings": () => (/* binding */ defaultSettings),
/* harmony export */   "fractions": () => (/* binding */ fractions),
/* harmony export */   "lineHeightCoeff": () => (/* binding */ lineHeightCoeff),
/* harmony export */   "monkeyMarginCoeff": () => (/* binding */ monkeyMarginCoeff),
/* harmony export */   "multipliers": () => (/* binding */ multipliers),
/* harmony export */   "order": () => (/* binding */ order),
/* harmony export */   "phi": () => (/* binding */ phi)
/* harmony export */ });
const phi = 1.618;
const multipliers = {
  baseText: 1 / phi ** 2,
  teaser: 1 / phi,
  h4: 1,
  h3: phi,
  h2: phi ** 2,
  h1: phi ** 3,
  margin: 1.5
};
const monkeyMarginCoeff = -0.182945154;
const lineHeightCoeff = 1.2;
const defaultSettings = {
  minBaseText: 8,
  font: {
    family: "Kaspersky Sans Display",
    style: "Medium"
  },
  defaultFont: {
    family: "Roboto",
    style: "Regular"
  }
};
const order = ["h1", "h2", "h3", "h4", "teaser", "baseText"];
const fractions = [["6:3", 5], ["1:1", 3], ["3:2", 3], ["1:8", 1], ["2:3", 3], ["8:1", 8], ["1:8", 1], ["2:3", 3], ["3:1", 5], ["1:3", 1.5]];

/***/ }),

/***/ "./src/helpers.js":
/*!************************!*\
  !*** ./src/helpers.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "closestFraction": () => (/* binding */ closestFraction)
/* harmony export */ });
function closestFraction(aspect, fractions) {
  // Calculate the absolute difference between the given aspectber and each fraction in the list
  const diffs = fractions.map(([fr]) => {
    const fraction = fr.split(":").reduce((a, b) => a / b);
    return Math.abs(fraction - aspect);
  });

  // Find the index of the smallest difference (the closest fraction)
  const closestIndex = diffs.indexOf(Math.min(...diffs));

  // Return the value of the closest fraction
  const closest = fractions[closestIndex];
  return [closest[0], closest[1]];
}

/***/ }),

/***/ "./src/logo.svg":
/*!**********************!*\
  !*** ./src/logo.svg ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<svg width=\"107\" height=\"32\" viewBox=\"0 0 107 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g id=\"Group 4427528\">\n<g id=\"logo\">\n<g id=\"logo_2\">\n<g id=\"Group 4426997\">\n<g id=\"CMYK_Logo_Black\">\n<path id=\"Vector\" d=\"M48.9982 17.3935C48.9982 20.7559 46.9333 22.3486 44.3521 22.3486H42.7723V20.34H44.2275C45.7851 20.34 46.822 19.5083 46.822 17.4068C46.822 15.3052 45.843 14.3098 44.183 14.3098C42.5231 14.3098 41.4416 15.2876 41.4416 17.3846V25.8216H39.3055V12.549H41.4594V13.686H41.7665C42.1013 13.2433 42.5377 12.8866 43.0394 12.6457C43.541 12.4048 44.0934 12.2867 44.6503 12.3012C47.0267 12.3012 49.016 14.0134 49.016 17.4156L48.9982 17.3935ZM34.8686 16.5308L33.4356 16.3892C32.3097 16.2874 31.7134 15.9822 31.7134 15.3274C31.7134 14.5531 32.4743 14.1063 33.5602 14.1063C34.6461 14.1063 35.4026 14.6372 35.4649 15.3893H37.5254C37.4453 13.4736 35.9456 12.2924 33.5691 12.2924C31.1927 12.2924 29.5639 13.5577 29.5639 15.4114C29.5639 16.9599 30.5474 17.9598 32.7814 18.181L34.2367 18.327C35.1267 18.4066 35.7097 18.588 35.7097 19.4242C35.7097 20.1807 35.1579 20.7293 33.7026 20.7293C32.3675 20.7293 31.7 20.1232 31.4775 19.3136H29.2524C29.4749 21.1673 31.0325 22.6052 33.7249 22.6052C36.2437 22.6052 37.8859 21.2779 37.8859 19.3224C37.8859 17.5926 36.7377 16.7166 34.8908 16.5308H34.8686ZM57.3736 19.3136C57.1701 19.7401 56.8434 20.0966 56.4352 20.3377C56.027 20.5789 55.5558 20.6936 55.0817 20.6674C53.5063 20.6674 52.3359 19.6498 52.3359 17.4466C52.3359 15.3495 53.4218 14.1904 55.104 14.1904C55.4152 14.1639 55.7285 14.2022 56.0239 14.3029C56.3194 14.4036 56.5905 14.5643 56.82 14.775C57.0495 14.9856 57.2322 15.2415 57.3567 15.5263C57.4811 15.8111 57.5445 16.1185 57.5427 16.429H53.6665V17.9775H59.6522V16.9599C59.6522 14.1284 57.7697 12.2924 55.0817 12.2924C52.5807 12.2924 50.1864 13.9824 50.1864 17.4466C50.1864 20.9107 52.5807 22.6052 55.0817 22.6052C56.0863 22.639 57.0725 22.3313 57.8775 21.7329C58.6825 21.1345 59.2583 20.2811 59.5097 19.3136H57.3736ZM23.5516 12.2924C21.1974 12.2924 19.435 13.5179 19.2303 15.3893H21.5044C21.6691 14.6991 22.3055 14.1904 23.5115 14.1904C25.0691 14.1904 25.5853 15.0044 25.5853 15.9999V19.3623C25.2334 19.8044 24.7887 20.1649 24.2821 20.4186C23.7756 20.6723 23.2195 20.8131 22.6526 20.8311C21.5845 20.8311 20.8725 20.3223 20.8725 19.4065C20.8725 18.4907 21.4466 17.9775 22.5502 17.9775H24.2725V16.429H22.4924C20.0314 16.429 18.6563 17.6545 18.6563 19.526C18.6563 21.2956 19.9913 22.6229 22.1809 22.6229C23.3082 22.6011 24.3993 22.223 25.2961 21.5434H25.6031V22.3796H27.7348V15.7831C27.7348 13.3586 26.0749 12.2791 23.5115 12.2791L23.5516 12.2924ZM8.91016 22.3486H11.0641V8.89899H8.91016V22.3486ZM17.9442 12.5268H15.323L12.1589 16.6192V17.9023L15.3764 22.3265H18.0466L14.2861 17.2431L17.9442 12.5268ZM95.6549 12.5268L93.8747 16.4157C93.4732 17.2051 93.1512 18.032 92.9135 18.8844H92.6064C92.3548 18.0406 92.0256 17.2216 91.6229 16.4378L89.8428 12.5268H87.4664L91.6096 21.3487L89.558 25.7729H91.8543L98.0046 12.5003L95.6549 12.5268ZM87.0213 12.5268H84.3868L81.2493 16.6192V17.9023L84.4669 22.3265H87.137L83.3632 17.2431L87.0213 12.5268ZM73.5459 16.5086L72.1129 16.3671C70.987 16.2653 70.3907 15.96 70.3907 15.3052C70.3907 14.531 71.1472 14.0842 72.2375 14.0842C73.3278 14.0842 74.0799 14.6151 74.1422 15.3672H76.2116C76.1315 13.4515 74.6318 12.2702 72.2553 12.2702C69.8789 12.2702 68.2501 13.5356 68.2501 15.3893C68.2501 16.9378 69.238 17.9377 71.4721 18.1589L72.9273 18.3049C73.8174 18.3845 74.4003 18.5659 74.4003 19.4021C74.4003 20.1586 73.8485 20.7072 72.3933 20.7072C71.0582 20.7072 70.3907 20.1011 70.1682 19.2915H67.943C68.1655 21.1452 69.7231 22.5831 72.4155 22.5831C74.9344 22.5831 76.5765 21.2558 76.5765 19.3003C76.5765 17.5704 75.4284 16.6945 73.5815 16.5086H73.5459ZM78.0318 22.3398H80.1857V8.89014H78.0318V22.3398ZM63.782 13.6639H63.4749V12.5268H61.321V22.3486H63.4749V17.2121C63.4749 15.4424 64.2893 14.4381 65.8914 14.4381H67.2577V12.2791H66.4522C64.9658 12.2791 64.3338 12.8365 63.782 13.6639Z\" fill=\"#1D1D1B\"/>\n</g>\n</g>\n</g>\n<g id=\"grid\">\n<g id=\"Vector_2\">\n<path d=\"M100.12 22.3397H98.0059V8.89014H100.12V22.3397Z\" fill=\"#FF00E5\"/>\n<path d=\"M104.301 12.518L106.873 12.518L103.283 17.2342L106.974 22.3175H104.353L101.195 17.8934V16.6103L104.301 12.518Z\" fill=\"#FF00E5\"/>\n</g>\n<g id=\"Vector_3\">\n<path d=\"M50.1636 2.1631L50.1636 0.0488275L63.6133 0.0488281L63.6133 2.1631L50.1636 2.1631Z\" fill=\"#FF00E5\"/>\n<path d=\"M59.9854 6.34359L59.9854 8.91654L55.2691 5.32577L50.1857 9.01701L50.1857 6.39601L54.6099 3.23771L55.893 3.23771L59.9854 6.34359Z\" fill=\"#FF00E5\"/>\n</g>\n<g id=\"horizontal-margin\">\n<path d=\"M2.11427 22.3399H0L0 8.89014H2.11427L2.11427 22.3399Z\" fill=\"#FF00E5\"/>\n<path d=\"M6.29477 12.518L8.86771 12.518L5.27694 17.2343L8.96818 22.3177H6.34718L3.18888 17.8935V16.6105L6.29477 12.518Z\" fill=\"#FF00E5\"/>\n</g>\n<g id=\"vertical-margin\">\n<path d=\"M50.1636 29.1958L50.1636 31.3101L63.6133 31.3101L63.6133 29.1958L50.1636 29.1958Z\" fill=\"#FF00E5\"/>\n<path d=\"M59.9854 25.0153L59.9854 22.4423L55.2691 26.0331L50.1857 22.3419L50.1857 24.9629L54.6099 28.1212L55.893 28.1212L59.9854 25.0153Z\" fill=\"#FF00E5\"/>\n</g>\n</g>\n</g>\n</g>\n</svg>\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!*********************!*\
  !*** ./src/code.js ***!
  \*********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _logo_svg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logo.svg */ "./src/logo.svg");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ "./src/constants.js");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers */ "./src/helpers.js");



const {
  minBaseText,
  font,
  defaultFont
} = _constants__WEBPACK_IMPORTED_MODULE_1__.defaultSettings;
const findLineHeight = (fontSize, baseHeight) => {
  return baseHeight * Math.ceil(fontSize / baseHeight);
};
figma.showUI(__html__, {
  themeColors: true,
  height: 300
});
figma.ui.onmessage = ({
  type,
  count = 1.5,
  closest = ""
}) => {
  if (type === "start") {
    // find the aspect ratio of the selected node
    if (figma.currentPage.selection.length === 0) {
      figma.notify("Please select a node");
      return;
    } else if (figma.currentPage.selection.length > 1) {
      figma.notify("Please select only one node");
      return;
    } else {
      const node = figma.currentPage.selection[0];
      const {
        width,
        height
      } = node;
      const ratio = width / height;
      const [closest, count] = (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.closestFraction)(ratio, _constants__WEBPACK_IMPORTED_MODULE_1__.fractions);
      figma.ui.postMessage({
        type: "ratio",
        count,
        closest
      }, {
        origin: "*"
      });
    }
  } else if (type === "apply-guide") {
    const node = figma.currentPage.selection[0];
    const {
      width,
      height
    } = node;

    // draw logo count times on the bottom of the node
    // so that logo width is width / count
    const logoWidth = width / count;
    const logoNodes = [];
    // for (let i = 0; i < Math.ceil(count); i++) {
    for (let i = 0; i < 1; i++) {
      const logoNode = figma.createNodeFromSvg(_logo_svg__WEBPACK_IMPORTED_MODULE_0__["default"]);
      node.appendChild(logoNode);
      const height = logoNode.height * (logoWidth / logoNode.width);
      logoNode.resize(logoWidth, height);
      logoNode.x = i * logoWidth;
      logoNode.y = node.height - height;
      logoNode.name = "helper " + i;
      logoNodes.push(logoNode);
    }
    const logoGroup = figma.group(logoNodes, node);
    for (let i = 0; i < logoNodes.length; i++) {
      const logoNode = logoNodes[i];
      figma.ungroup(logoNode);
    }
    logoGroup.name = "Grid Helper";

    // find horizontal-margin and vertical-margin
    const k = logoGroup.findOne(node => node.name === "horizontal-margin");
    const [kHeight, margin] = [k.height, k.width]; // base module

    // Draw Grid
    // draw vertical lines
    // draw a vertical line from top to bottom
    // with x position equal to margin

    const scaledMargin = margin * _constants__WEBPACK_IMPORTED_MODULE_1__.multipliers.margin;
    const left = figma.createLine();
    node.appendChild(left);
    left.name = "vertical-line";
    left.rotation = -90;
    left.x = scaledMargin;
    left.y = 0;
    left.resize(height, 0);
    left.strokes = [{
      type: "SOLID",
      color: {
        r: 0,
        g: 0,
        b: 0
      }
    }];
    left.strokeWeight = 0.25;
    const right = figma.createLine();
    node.appendChild(right);
    right.name = "vertical-line";
    right.rotation = -90;
    right.x = width - scaledMargin;
    right.y = 0;
    right.resize(height, 0);
    right.strokes = [{
      type: "SOLID",
      color: {
        r: 0,
        g: 0,
        b: 0
      }
    }];
    right.strokeWeight = 0.25;

    // draw horizontal lines
    // draw a horizontal line from left to right
    // with y position equal to margin
    const top = figma.createLine();
    node.appendChild(top);
    top.name = "horizontal-line";
    top.x = 0;
    top.y = scaledMargin;
    top.resize(width, 0);
    top.strokes = [{
      type: "SOLID",
      color: {
        r: 0,
        g: 0,
        b: 0
      }
    }];
    top.strokeWeight = 0.25;
    const bottom = figma.createLine();
    node.appendChild(bottom);
    bottom.name = "horizontal-line";
    bottom.x = 0;
    bottom.y = height - scaledMargin;
    bottom.resize(width, 0);
    bottom.strokes = [{
      type: "SOLID",
      color: {
        r: 0,
        g: 0,
        b: 0
      }
    }];
    bottom.strokeWeight = 0.25;

    // move the logo group so that
    // the k right side is aligned with the left line
    logoGroup.x = scaledMargin - k.x - k.width;
    const verticalK = logoGroup.findOne(node => node.name === "vertical-margin");

    // move the logo group so that
    // the vertical k top side is aligned with the bottom line
    // logoGroup.y -= verticalK.y + verticalK.height / 2 - (height - scaledMargin)
    logoGroup.y -= verticalK.y - (height - scaledMargin);

    /* Draw Text */

    // make font not less than minBaseText
    const baseFontSize = Math.max(Math.round(kHeight * _constants__WEBPACK_IMPORTED_MODULE_1__.multipliers.baseText), minBaseText);
    const coeff = Math.max(1, minBaseText / Math.round(kHeight * _constants__WEBPACK_IMPORTED_MODULE_1__.multipliers.baseText));

    // calculate line height
    const baseHeight = Math.ceil(baseFontSize * _constants__WEBPACK_IMPORTED_MODULE_1__.lineHeightCoeff);
    const drawStuff = font => {
      const calculateTextProps = () => {
        const firstKey = _constants__WEBPACK_IMPORTED_MODULE_1__.order[0];
        const text = figma.createText();
        text.fontName = font;
        node.appendChild(text);
        text.characters = "Head " + firstKey[1];
        text.name = text.characters;
        text.fontSize = Math.round(kHeight * _constants__WEBPACK_IMPORTED_MODULE_1__.multipliers[firstKey] * coeff);
        const geometry = figma.flatten([text]);
        const {
          height
        } = geometry;
        const kDiff = kHeight / height;
        geometry.remove();
        return kDiff;
      };
      const kDiff = calculateTextProps();
      let offset = scaledMargin;
      _constants__WEBPACK_IMPORTED_MODULE_1__.order.forEach(key => {
        const text = figma.createText();
        text.fontName = font;
        node.appendChild(text);

        // if key starts with h, then it's a header
        if (key.startsWith("h")) {
          text.characters = "Head " + key[1];
          text.name = text.characters;
        } else {
          // capitalize first letter of key
          text.characters = key[0].toUpperCase() + key.slice(1);
          text.name = text.characters;
        }
        const fontSize = Math.round(kHeight * _constants__WEBPACK_IMPORTED_MODULE_1__.multipliers[key] * coeff * kDiff);
        text.fontSize = fontSize;
        const lineHeight = findLineHeight(fontSize, baseHeight);
        text.lineHeight = {
          value: lineHeight,
          unit: "PIXELS"
        };

        // Create text style
        const style = figma.createTextStyle();
        style.fontName = font;
        style.name = `${closest ? closest + " " : ""}` + text.characters;
        style.fontSize = fontSize;
        style.lineHeight = text.lineHeight;
        text.textStyleId = style.id;
        text.x = scaledMargin;
        if (offset === scaledMargin) {
          const clone = text.clone();
          const geometry = figma.flatten([clone]);
          const {
            y
          } = geometry;
          const dafuq = y - text.y;
          text.y = offset - dafuq;
          geometry.remove();
        } else {
          text.y = offset;
        }

        // if bottom of text is below top of the logo, remove it
        if (text.y + text.height > logoGroup.y) {
          text.remove();
        } else {
          offset = text.y + text.height;
        }
      });
      figma.closePlugin();
    };
    figma.loadFontAsync(font).then(() => {
      drawStuff(font);
    }).catch(() => {
      figma.loadFontAsync(defaultFont).then(() => {
        drawStuff(defaultFont);
      });
    });
    figma.viewport.scrollAndZoomIntoView([node]);
  } else if (type === "cancel") figma.closePlugin();
};
})();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,